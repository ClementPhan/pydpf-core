# azure pipelines build and test pymapdl

variables:
  ALLOW_PLOTTING: true
  package_name: ansys-dpf-core
  SHELLOPTS: 'errexit:pipefail'

trigger:
  branches:
    include:
    - '*'
    exclude:
    - gh-pages
  tags:
    include:
    - '*'

jobs:
- job: Windows
  variables:
    python.version: '3.7'  # due to VTK 8.1.2 requirement for docbuild
    DISPLAY: ':99.0'
    PYANSYS_OFF_SCREEN: True
  # strategy:
    # matrix:
    #   Python35:
    #     python.version: '3.5'
    #   Python36:
    #     python.version: '3.6'
    #   Python37:
    #     python.version: '3.7'
    #   Python38:
    #     python.version: '3.8'
  pool:
    vmImage: 'vs2017-win2016'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python.version)
        addToPath: true
    - task: PipAuthenticate@1
      inputs:
        artifactFeeds: 'pyansys'
        onlyAddExtraIndex: true
    - script: |
        pip install -r requirements_build.txt
        python setup.py bdist_wheel
        pip install dist/ansys_mapdl*.whl
        python -c "from ansys import mapdl; print(mapdl.Report())"


    - task: UniversalPackages@0
      inputs:
        command: 'download'
        downloadDirectory: '$(System.DefaultWorkingDirectory)'
        feedsToUse: 'internal'
        vstsFeed: '705e121a-9631-49f5-8aaf-c7142856f923'
        vstsFeedPackage: 'f913c1d3-1fe4-404c-8c28-15a234e56803'
        vstsPackageVersion: '21.1.0'



# - job: Linux
#   variables:
#     python.version: '3.7'  # due to VTK 8.1.2 requirement for docbuild
#     DISPLAY: ':99.0'
#     MAPDL_IMAGE: 'docker.pkg.github.com/pyansys/mapdl/mapdl_grpc:v20.2.0'
#     PYMAPDL_PORT: 32771  # default won't work on azure devops...
#     PYMAPDL_START_INSTANCE: FALSE
#     PYANSYS_OFF_SCREEN: True
#   pool:
#     vmImage: 'ubuntu-20.04'
#   steps:
#     - task: UsePythonVersion@0
#       inputs:
#         versionSpec: '$(python.version)'
#       displayName: 'Use Python $(python.version)'
#     - task: PipAuthenticate@1
#       inputs:
#         artifactFeeds: 'pyansys'
#         onlyAddExtraIndex: true

#     - script: |
#         .ci/setup_headless_display.sh
#         pip install -r .ci/requirements_test_xvfb.txt
#         python .ci/display_test.py
#       displayName: Install and start a virtual framebuffer

#     - script: |
#         pip install -r requirements_build.txt
#         python setup.py bdist_wheel
#         pip install dist/ansys_mapdl*.whl
#         python -c "from ansys import mapdl; print(mapdl.Report())"
#       displayName: Build, install, and validate installation of ansys-mapdl

#     - script: |
#         set -ex
#         echo $(PAT) | docker login -u $(GH_USERNAME) --password-stdin docker.pkg.github.com
#         docker pull $(MAPDL_IMAGE)
#         docker run -e ANSYSLMD_LICENSE_FILE=1055@$(LICENSE_SERVER) --restart always --name mapdl -p $(PYMAPDL_PORT):50052 $(MAPDL_IMAGE) -smp &
#         python -c "from ansys.mapdl import launch_mapdl; print(launch_mapdl())"
#       displayName: Pull, launch, and validate MAPDL service

#     - script: |
#         pip install -r requirements_test.txt
#         pip install pytest-azurepipelines
#         pytest -v --junitxml=junit/test-results.xml --cov --cov-report=xml --cov-report=html
#       displayName:  'Test Core API'

    # - template: build_documentation.yml  # path is relative

    # - script: |
    #     bash <(curl -s https://codecov.io/bash)
    #   displayName: 'Upload coverage to codecov.io'
    #   condition: eq(variables['python.version'], '3.7')

    # - script: |
    #     pip install twine
    #     python setup.py sdist
    #     twine upload --skip-existing dist/pyvista*
    #   displayName: 'Upload to PyPi'
    #   condition: and(eq(variables['python.version'], '3.7'), contains(variables['Build.SourceBranch'], 'refs/tags/'))
    #   env:
    #     TWINE_USERNAME: $(twine.username)
    #     TWINE_PASSWORD: $(twine.password)
    #     TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"


