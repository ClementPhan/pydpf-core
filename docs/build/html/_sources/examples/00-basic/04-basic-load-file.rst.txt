
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\00-basic\04-basic-load-file.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-basic_04-basic-load-file.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-basic_04-basic-load-file.py:


.. _ref_basic_load_file_example:

Write/load and upload/download a result file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ansys.dpf.core module is able to upload files to 
the server machine, and dowload files from there. 

This example shows how to write and upload files 
on the server machine, then how to download it back 
on the cient side. 

The result fields container will be exported under 
.csv format.

.. GENERATED FROM PYTHON SOURCE LINES 18-20

Let's first load a ``Model`` from the ``Examples`` provided by 
``ansys.dpf.core`` module. 

.. GENERATED FROM PYTHON SOURCE LINES 20-27

.. code-block:: default


    from ansys.dpf import core
    from ansys.dpf.core import examples

    model = core.Model(examples.simple_bar)
    mesh = model.metadata.meshed_region








.. GENERATED FROM PYTHON SOURCE LINES 28-31

Get the result
~~~~~~~~~~~~~~
Get the result fields container and plot (in order to compare later)

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: default


    displacement_operator = model.results.displacement()
    fc_out = displacement_operator.outputs.fields_container()
    mesh.plot(fc_out)




.. image:: /examples/00-basic/images/sphx_glr_04-basic-load-file_001.png
    :alt: 04 basic load file
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [(4.199214280684376, 5.199214280684376, 4.199214280684376),
     (0.5, 1.5, 0.5),
     (0.0, 0.0, 1.0)]



.. GENERATED FROM PYTHON SOURCE LINES 37-41

Export result
~~~~~~~~~~~~~
Let's get the result fields container and export
it using .csv format. 

.. GENERATED FROM PYTHON SOURCE LINES 41-50

.. code-block:: default


    import os
    file_path = os.getcwd() + '\\simple_bar_fc.csv'

    export_csv_operator = core.operators.serialization.field_to_csv()
    export_csv_operator.inputs.field_or_fields_container.connect(fc_out)
    export_csv_operator.inputs.file_path.connect(file_path)
    export_csv_operator.run()








.. GENERATED FROM PYTHON SOURCE LINES 51-59

Upload .csv result file
~~~~~~~~~~~~~~~~~~~~~~~
Let's upload the simple_bar_fc.csv file 
on the server side. The upload_file_in_tmp_folder()
method will be used here, because we assume we don't
know the server machine architecture. However, the 
upload_file() method can be used the same way wil a 
know "server file path". 

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: default


    server_file_path = core.upload_file_in_tmp_folder(file_path)
    print(server_file_path)

    # remove file to avoid polluting
    os.remove(file_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    C:\Users\cbellot\AppData\Local\Temp\dataProcessingTemp50808\simple_bar_fc.csv




.. GENERATED FROM PYTHON SOURCE LINES 67-70

Download .csv result file
~~~~~~~~~~~~~~~~~~~~~~~~~
Let's now download the simple_bar_fc.csv file.

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: default


    downloaded_client_file_path = os.getcwd() + '\\simple_bar_fc_downloaded.csv'
    core.download_file(server_file_path, downloaded_client_file_path)








.. GENERATED FROM PYTHON SOURCE LINES 75-79

Load .csv result file as operators input
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Let's now load the fields container contained in 
the .csv file.

.. GENERATED FROM PYTHON SOURCE LINES 79-89

.. code-block:: default


    my_data_sources = core.DataSources(downloaded_client_file_path)
    import_csv_operator = core.operators.serialization.csv_to_field()
    import_csv_operator.inputs.data_sources.connect(my_data_sources)
    downloaded_fc_out = import_csv_operator.outputs.fields_container()
    mesh.plot(downloaded_fc_out)

    # remove file to avoid polluting
    os.remove(downloaded_client_file_path)




.. image:: /examples/00-basic/images/sphx_glr_04-basic-load-file_002.png
    :alt: 04 basic load file
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-94

Make operations over the imported fields container
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This fields container can be used as it was introduced 
in the basics examples. 

.. GENERATED FROM PYTHON SOURCE LINES 94-98

.. code-block:: default


    min_max_op = core.operators.min_max.min_max_fc()
    min_max_op.inputs.fields_container.connect(downloaded_fc_out)
    min_field = min_max_op.outputs.field_min()
    min_field.data



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([[-8.202171e-07, -6.265107e-06, -2.444680e-05]])




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.306 seconds)


.. _sphx_glr_download_examples_00-basic_04-basic-load-file.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 04-basic-load-file.py <04-basic-load-file.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 04-basic-load-file.ipynb <04-basic-load-file.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
